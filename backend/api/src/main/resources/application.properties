# File: multi-restaurant-platform/backend/api/src/main/resources/application.properties

# Default Server Configuration
server.port=8081

# Application Name
spring.application.name=multi-restaurant-platform-backend

# --- H2 Database Console Settings (for development) ---
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# --- JPA / Hibernate Settings ---
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
# How Hibernate interacts with the schema. Set to 'validate' or 'none' when using Flyway.
# 'validate': Checks if the DB schema matches JPA entities on startup (good for catching mismatches).
# 'none': Trusts Flyway completely to manage the schema.
# Avoid 'create', 'create-drop', or 'update' when Flyway is active.
spring.jpa.hibernate.ddl-auto=validate

# --- Flyway Settings ---
spring.flyway.enabled=true
# spring.flyway.locations=classpath:db/migration # Default location

# --- SpringDoc OpenAPI (Swagger UI) Configuration ---
# springdoc.swagger-ui.path=/swagger-ui.html
# springdoc.api-docs.path=/v3/api-docs

# --- JWT Configuration ---
# The JWT secret key is read from the JWT_SECRET_KEY environment variable.
# This variable is loaded from the .env file by dotenv-java during local development.
app.jwt.secret=${JWT_SECRET_KEY:fallback-secret-for-testing-only-if-env-is-missing-replace-or-remove-for-prod}

# Token validity duration in milliseconds. Example: 1 hour = 3600000 ms.
app.jwt.expiration-ms=3600000

# Standard prefix for the JWT in the Authorization header (e.g., "Bearer <token>"). Note the space at the end.
app.jwt.token-prefix=Bearer

# --- Logging Configuration ---
logging.level.com.multirestaurantplatform.security=DEBUG
