# File: multi-restaurant-platform/backend/api/src/main/resources/application.properties

# Default Server Configuration
server.port=8081

# Application Name
spring.application.name=multi-restaurant-platform-backend

# --- H2 Database Console Settings (for development) ---
# Enable H2 console web UI (useful for checking the in-memory DB)
spring.h2.console.enabled=true
# Set the path for the console (access via http://localhost:8081/h2-console after starting)
spring.h2.console.path=/h2-console
# Default H2 JDBC URL Spring Boot uses with auto-config: jdbc:h2:mem:testdb
# Default username: sa
# Default password: (empty)
# You typically don't need to set spring.datasource.* properties when using H2 auto-configuration

# --- JPA / Hibernate Settings ---
# Show SQL statements generated by Hibernate in the logs
spring.jpa.show-sql=true
# Format the SQL statements in the logs for better readability
spring.jpa.properties.hibernate.format_sql=true

# !!! IMPORTANT FOR FLYWAY !!!
# How Hibernate interacts with the schema. Set to 'validate' or 'none' when using Flyway.
# 'validate': Checks if the DB schema matches JPA entities on startup (good for catching mismatches).
# 'none': Trusts Flyway completely to manage the schema.
# Avoid 'create', 'create-drop', or 'update' when Flyway is active.
spring.jpa.hibernate.ddl-auto=validate


# --- Flyway Settings ---
# Enable Flyway database migrations (true by default if flyway-core is on classpath)
spring.flyway.enabled=true
# Location of migration scripts (default is classpath:db/migration)
# spring.flyway.locations=classpath:db/migration


# --- SpringDoc OpenAPI (Swagger UI) Configuration ---
# Add specific settings here if needed, e.g.:
# springdoc.swagger-ui.path=/swagger-ui.html
# springdoc.api-docs.path=/v3/api-docs