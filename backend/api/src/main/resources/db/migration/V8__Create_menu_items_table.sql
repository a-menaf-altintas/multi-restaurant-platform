-- File: backend/api/src/main/resources/db/migration/V8__Create_menu_items_table.sql

-- Create the menu_items table
CREATE TABLE menu_items (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(1000),
    price DECIMAL(10, 2) NOT NULL,
    image_url VARCHAR(2048),
    is_active BOOLEAN NOT NULL DEFAULT TRUE,
    dietary_information VARCHAR(500),
    menu_id BIGINT NOT NULL,
    -- Consistent timestamp type with existing tables
    created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_menu_items_menu
        FOREIGN KEY (menu_id)
        REFERENCES menus (id)
        ON DELETE CASCADE -- If a menu is deleted, its items are also deleted.
);

-- Add an index on menu_id for faster lookups of items by menu
CREATE INDEX idx_menu_items_menu_id ON menu_items (menu_id);

-- Add a unique constraint for item name within a specific menu
-- This prevents duplicate item names within the same menu.
ALTER TABLE menu_items
ADD CONSTRAINT uq_menu_items_menu_id_name UNIQUE (menu_id, name);

-- Note on updated_at:
-- If you are using @UpdateTimestamp in your BaseEntity, Hibernate will handle updating this field.
-- If you are using database triggers for other tables (like 'menus') to update 'updated_at',
-- you might need a similar trigger for the 'menu_items' table or ensure your application logic handles it.
-- The example trigger in the previous version was for PostgreSQL; adapt if using a different DB and triggers.
