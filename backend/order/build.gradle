// File: backend/order/build.gradle
plugins {
    id 'java-library'
}

description = 'The order module - defines order entities, cart functionality, and order workflow services/repositories'

dependencies {
    // For Jakarta Persistence API (JPA) entities and Spring Data JPA
    // Version is managed by the Spring Boot BOM in the root project.
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // For using validation annotations like @NotNull, @Min etc. in DTOs and Entities
    // Version is managed by the Spring Boot BOM in the root project.
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // For Spring Web (needed for @RestController, @RequestMapping, ResponseEntity, etc. in OrderController)
    // Also brings in core Spring framework classes.
    // Version is managed by the Spring Boot BOM in the root project.
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Explicitly add Spring Boot Starter Security to ensure all security annotations and classes
    // (like @PreAuthorize, UserDetails, @AuthenticationPrincipal, AccessDeniedException) are available directly to this module.
    // Version is managed by the Spring Boot BOM in the root project.
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // For OpenAPI 3.0 (Swagger) annotations and UI generation
    // Version ('org.springdoc:springdoc-openapi-starter-webmvc-ui') is managed by the root build.gradle's dependencyManagement.
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui'

    // Dependency on the common module (for BaseEntity, custom exceptions like ResourceNotFoundException)
    implementation project(':backend:common')

    // Dependency on the security module (for User model, Role enum, UserRepository, and potentially custom UserDetails implementations)
    // This module provides your application-specific security logic and models.
    implementation project(':backend:security')

    // Dependency on the restaurant module (for Restaurant model, RestaurantRepository, used for authorization checks in OrderService)
    implementation project(':backend:restaurant')

    // Lombok is managed by the root project's subprojects configuration (compileOnly and annotationProcessor).
    // No need to declare version here.
    // compileOnly 'org.projectlombok:lombok'
    // annotationProcessor 'org.projectlombok:lombok'

    // --- Test Dependencies ---
    // Versions are managed by the Spring Boot BOM in the root project.
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test' // For @WithMockUser and other security testing utilities

    // Test dependency on the api module (e.g., if tests need GlobalExceptionHandler or ErrorResponse DTO from the api module)
    // This was existing for CartControllerTest. Keep if still relevant for order tests.
    testImplementation project(':backend:api')
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}
